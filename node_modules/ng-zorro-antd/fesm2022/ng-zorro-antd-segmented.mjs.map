{"version":3,"file":"ng-zorro-antd-segmented.mjs","sources":["../../components/segmented/segmented.service.ts","../../components/segmented/segmented-item.component.ts","../../components/segmented/types.ts","../../components/segmented/segmented.component.ts","../../components/segmented/segmented.module.ts","../../components/segmented/public-api.ts","../../components/segmented/ng-zorro-antd-segmented.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AnimationEvent } from '@angular/animations';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\n\n@Injectable()\nexport class NzSegmentedService implements OnDestroy {\n  readonly selected$ = new ReplaySubject<string | number>(1);\n  readonly activated$ = new ReplaySubject<HTMLElement>(1);\n  readonly change$ = new Subject<string | number>();\n  readonly disabled$ = new ReplaySubject<boolean>(1);\n  readonly animationDone$ = new Subject<AnimationEvent>();\n\n  ngOnDestroy(): void {\n    this.selected$.complete();\n    this.activated$.complete();\n    this.change$.complete();\n    this.disabled$.complete();\n    this.animationDone$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgTemplateOutlet } from '@angular/common';\nimport {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  DestroyRef,\n  ElementRef,\n  inject,\n  input,\n  OnInit,\n  signal,\n  TemplateRef,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzSegmentedService } from './segmented.service';\n\n@Component({\n  selector: 'label[nz-segmented-item],label[nzSegmentedItem]',\n  exportAs: 'nzSegmentedItem',\n  imports: [NzIconModule, NgTemplateOutlet],\n  template: `\n    <input class=\"ant-segmented-item-input\" type=\"radio\" [checked]=\"isChecked()\" (click)=\"$event.stopPropagation()\" />\n    <div class=\"ant-segmented-item-label\" [attr.aria-selected]=\"isChecked()\">\n      @if (nzIcon(); as icon) {\n        <span class=\"ant-segmented-item-icon\">\n          <nz-icon [nzType]=\"icon\" />\n        </span>\n        @if (hasLabel()) {\n          <span>\n            <ng-template [ngTemplateOutlet]=\"content\" />\n          </span>\n        }\n      } @else {\n        <ng-template [ngTemplateOutlet]=\"content\" />\n      }\n    </div>\n\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    class: 'ant-segmented-item',\n    '[class.ant-segmented-item-selected]': 'isChecked()',\n    '[class.ant-segmented-item-disabled]': 'nzDisabled() || parentDisabled()',\n    '(click)': 'handleClick()'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzSegmentedItemComponent implements OnInit {\n  private readonly service = inject(NzSegmentedService);\n  private readonly elementRef = inject(ElementRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly templateRef = viewChild.required('content', { read: TemplateRef });\n\n  readonly nzValue = input.required<string | number>();\n  readonly nzIcon = input<string>();\n  readonly nzDisabled = input(false, { transform: booleanAttribute });\n  readonly hasLabel = computed(() =>\n    this.templateRef()\n      .createEmbeddedView({})\n      .rootNodes.some(node => node.textContent.trim().length > 0)\n  );\n\n  protected readonly isChecked = signal(false);\n  readonly parentDisabled = toSignal(this.service.disabled$, { initialValue: false });\n\n  ngOnInit(): void {\n    this.service.selected$\n      .pipe(\n        tap(value => {\n          this.isChecked.set(false);\n          if (value === this.nzValue()) {\n            this.service.activated$.next(this.elementRef.nativeElement);\n          }\n        }),\n        switchMap(value =>\n          this.service.animationDone$.pipe(\n            filter(event => event.toState === 'to' || event.toState === 'toVertical'),\n            take(1),\n            map(() => value)\n          )\n        ),\n        filter(value => value === this.nzValue()),\n        takeUntilDestroyed(this.destroyRef)\n      )\n      .subscribe(() => this.isChecked.set(true));\n  }\n\n  handleClick(): void {\n    if (!this.nzDisabled() && !this.parentDisabled()) {\n      this.service.selected$.next(this.nzValue());\n      this.service.change$.next(this.nzValue());\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type NzSegmentedOption = {\n  value: string | number;\n  disabled?: boolean;\n} & (NzSegmentedWithLabel | NzSegmentedWithIcon);\n\nexport interface NzSegmentedWithLabel {\n  label: string;\n  icon?: string;\n}\n\nexport interface NzSegmentedWithIcon {\n  icon: string;\n  label?: string;\n}\n\nexport type NzSegmentedOptions = Array<NzSegmentedOption | string | number>;\n\nexport function normalizeOptions(unnormalized: NzSegmentedOptions): NzSegmentedOption[] {\n  return unnormalized.map(item => {\n    if (typeof item === 'string' || typeof item === 'number') {\n      return {\n        label: `${item}`,\n        value: item\n      };\n    }\n\n    return item;\n  });\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AnimationEvent } from '@angular/animations';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  contentChildren,\n  effect,\n  EventEmitter,\n  forwardRef,\n  inject,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  viewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { bufferCount } from 'rxjs/operators';\n\nimport { ThumbAnimationProps, thumbMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzSegmentedItemComponent } from './segmented-item.component';\nimport { NzSegmentedService } from './segmented.service';\nimport { normalizeOptions, NzSegmentedOption, NzSegmentedOptions } from './types';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'segmented';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-segmented',\n  exportAs: 'nzSegmented',\n  template: `\n    <!-- thumb motion div -->\n    <div class=\"ant-segmented-group\">\n      @if (animationState) {\n        <div\n          class=\"ant-segmented-thumb ant-segmented-thumb-motion\"\n          [@thumbMotion]=\"animationState\"\n          (@thumbMotion.done)=\"handleThumbAnimationDone($event)\"\n        ></div>\n      }\n\n      <ng-content>\n        @for (item of normalizedOptions; track item.value) {\n          <label nz-segmented-item [nzIcon]=\"item.icon\" [nzValue]=\"item.value\" [nzDisabled]=\"item.disabled\">\n            {{ item.label }}\n          </label>\n        }\n      </ng-content>\n    </div>\n  `,\n  host: {\n    class: 'ant-segmented',\n    '[class.ant-segmented-disabled]': 'nzDisabled',\n    '[class.ant-segmented-rtl]': `dir === 'rtl'`,\n    '[class.ant-segmented-lg]': `nzSize === 'large'`,\n    '[class.ant-segmented-sm]': `nzSize === 'small'`,\n    '[class.ant-segmented-block]': `nzBlock`,\n    '[class.ant-segmented-vertical]': `nzVertical`\n  },\n  providers: [\n    NzSegmentedService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSegmentedComponent),\n      multi: true\n    }\n  ],\n  animations: [thumbMotion],\n  imports: [NzIconModule, NzOutletModule, NzSegmentedItemComponent]\n})\nexport class NzSegmentedComponent implements OnChanges, ControlValueAccessor {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  public readonly nzConfigService = inject(NzConfigService);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly directionality = inject(Directionality);\n  private readonly service = inject(NzSegmentedService);\n\n  @Input({ transform: booleanAttribute }) nzBlock: boolean = false;\n  @Input({ transform: booleanAttribute }) nzDisabled = false;\n  @Input() nzOptions: NzSegmentedOptions = [];\n  @Input({ transform: booleanAttribute }) nzVertical: boolean = false;\n  @Input() @WithConfig() nzSize: NzSizeLDSType = 'default';\n\n  @Output() readonly nzValueChange = new EventEmitter<number | string>();\n\n  private viewItemCmps = viewChildren(NzSegmentedItemComponent);\n  private contentItemCmps = contentChildren(NzSegmentedItemComponent);\n  private isDisabledFirstChange = true;\n\n  protected dir: Direction = 'ltr';\n  protected value?: number | string;\n  protected animationState: null | { value: string; params: ThumbAnimationProps } = {\n    value: 'to',\n    params: thumbAnimationParamsOf()\n  };\n  protected normalizedOptions: NzSegmentedOption[] = [];\n  protected onChange: OnChangeType = () => {};\n  protected onTouched: OnTouchedType = () => {};\n\n  constructor() {\n    this.directionality.change.pipe(takeUntilDestroyed()).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.markForCheck();\n    });\n\n    this.service.selected$.pipe(takeUntilDestroyed()).subscribe(value => {\n      this.value = value;\n    });\n\n    this.service.change$.pipe(takeUntilDestroyed()).subscribe(value => {\n      this.nzValueChange.emit(value);\n      this.onChange(value);\n    });\n\n    this.service.activated$.pipe(bufferCount(2, 1), takeUntilDestroyed()).subscribe(elements => {\n      if (this.nzVertical) {\n        this.animationState = {\n          value: 'fromVertical',\n          params: thumbAnimationParamsOf(elements[0], true)\n        };\n        this.cdr.detectChanges();\n\n        this.animationState = {\n          value: 'toVertical',\n          params: thumbAnimationParamsOf(elements[1], true)\n        };\n        this.cdr.detectChanges();\n      } else {\n        this.animationState = {\n          value: 'from',\n          params: thumbAnimationParamsOf(elements[0])\n        };\n        this.cdr.detectChanges();\n\n        this.animationState = {\n          value: 'to',\n          params: thumbAnimationParamsOf(elements[1])\n        };\n        this.cdr.detectChanges();\n      }\n    });\n\n    effect(() => {\n      const itemCmps = this.viewItemCmps().concat(this.contentItemCmps());\n\n      if (!itemCmps.length) {\n        return;\n      }\n\n      if (\n        this.value === undefined || // If no value is set, select the first item\n        !itemCmps.some(item => item.nzValue() === this.value) // handle value not in options\n      ) {\n        this.service.selected$.next(itemCmps[0].nzValue());\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzOptions, nzDisabled } = changes;\n    if (nzOptions) {\n      this.normalizedOptions = normalizeOptions(nzOptions.currentValue);\n    }\n    if (nzDisabled) {\n      this.service.disabled$.next(nzDisabled.currentValue);\n    }\n  }\n\n  handleThumbAnimationDone(event: AnimationEvent): void {\n    if (event.toState === 'to' || event.toState === 'toVertical') {\n      this.animationState = null;\n    }\n    this.service.animationDone$.next(event);\n  }\n\n  writeValue(value: number | string): void {\n    this.service.selected$.next(value);\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = (this.isDisabledFirstChange && this.nzDisabled) || disabled;\n    this.isDisabledFirstChange = false;\n  }\n}\n\nfunction thumbAnimationParamsOf(element?: HTMLElement, vertical: boolean = false): ThumbAnimationProps {\n  if (vertical) {\n    return {\n      transform: element?.offsetTop ?? 0,\n      width: element?.clientWidth ?? 0,\n      height: element?.clientHeight ?? 0,\n      vertical\n    };\n  }\n  return {\n    transform: element?.offsetLeft ?? 0,\n    width: element?.clientWidth ?? 0\n  };\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { NzSegmentedItemComponent } from './segmented-item.component';\nimport { NzSegmentedComponent } from './segmented.component';\n\n@NgModule({\n  imports: [NzSegmentedComponent, NzSegmentedItemComponent],\n  exports: [NzSegmentedComponent, NzSegmentedItemComponent]\n})\nexport class NzSegmentedModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport { NzSegmentedItemComponent } from './segmented-item.component';\nexport { NzSegmentedComponent } from './segmented.component';\nexport { NzSegmentedModule } from './segmented.module';\nexport * from './types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}